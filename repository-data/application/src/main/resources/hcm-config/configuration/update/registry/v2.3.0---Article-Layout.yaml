definitions:
  config:
    /hippo:configuration/hippo:update/hippo:registry/v2.3.0 - Article Layout:
      jcr:primaryType: hipposys:updaterinfo
      hipposys:batchsize: 10
      hipposys:description: ''
      hipposys:dryrun: false
      hipposys:loglevel: DEBUG
      hipposys:logtarget: REPOSITORY
      hipposys:parameters: ''
      hipposys:script: "package com.visitscotland.brxm\r\n\r\nimport org.hippoecm.repository.api.HippoWorkspace\r\
        \nimport org.onehippo.repository.update.BaseNodeUpdateVisitor\r\n\r\nimport\
        \ javax.jcr.Node\r\nimport javax.jcr.NodeIterator\r\nimport javax.jcr.RepositoryException\r\
        \nimport javax.jcr.Session\r\nimport javax.jcr.query.Query\r\nimport javax.jcr.query.QueryResult\r\
        \n\r\n/**\r\n * Groovy Script created for removing the value of alt-Text from\
        \ image as all current images have been tagged as decorative.\r\n *\r\n *\
        \ See VS-3830 For more information\r\n *\r\n * Use the following XPATH /jcr:root\r\
        \n *\r\n * @author jcalcines\r\n * @since August 2022 (Revised on March 2023)\r\
        \n * @version 1.0.9\r\n */\r\nclass ArticleLayout extends BaseNodeUpdateVisitor\
        \ {\r\n\r\n    void removeAltText(Session session){\r\n        NodeIterator\
        \ it = query(session,\"//content/documents//element(*, visitscotland:Article)[not(@visitscotland:theme)]\"\
        )\r\n\r\n        int i = 0\r\n\r\n        while (it.hasNext()){\r\n      \
        \      Node n = it.next()\r\n            i++;\r\n            n.setProperty(\"\
        visitscotland:theme\", \"\")\r\n            n.setProperty(\"\visitscotland:nest\", false)
        \r\n        }\r\n\r\n        log.info(\"$i Article\
        \ documents have been updated\")\r\n    }\r\n\r\n    @Override\r\n    boolean\
        \ doUpdate(Node node) {\r\n        removeAltText(node.session)\r\n       \
        \ return true\r\n    }\r\n\r\n    /**\r\n     * Executes a query and log when\
        \ no results are returned\r\n     * @param session\r\n     * @param query\r\
        \n     * @return\r\n     */\r\n    NodeIterator query(def session, def query){\r\
        \n        QueryResult results = ((HippoWorkspace) session.getWorkspace()).getQueryManager().createQuery(query,\
        \ Query.XPATH).execute();\r\n        if (!results.getNodes().hasNext()){\r\
        \n            log.warn \"No query results for ${query}\"\r\n        } else\
        \ {\r\n            // Note that the method size. Moves the pointer for the\
        \ iterator at the end. That is why we need to\r\n            // invoke .getNodes()\
        \ for getting the size\r\n            log.info \"Matches = ${results.getNodes().size()}\"\
        \r\n        }\r\n        return results.getNodes()\r\n    }\r\n\r\n    @Override\r\
        \n    boolean undoUpdate(Node node) throws RepositoryException, UnsupportedOperationException\
        \ {\r\n        return false\r\n    }\r\n}"
      hipposys:throttle: 1000
      hipposys:query: /jcr:root
